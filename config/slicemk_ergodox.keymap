#define LAYER_MAIN 0
#define LAYER_LHFN 1
#define LAYER_RHFN 2
#define LAYER_GAMING 3
#define LAYER_LFN 4
#define LAYER_RFN 5

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

&lt {
	tapping-term-ms = <100>;
	require-prior-idle-ms = <125>;
	retro-tap;
};

/ {
	behaviors {
		hrl: home_row_layer {
			compatible = "zmk,behavior-hold-tap";
			#binding-cells = <2>;
			flavor = "balanced";
			tapping-term-ms = <100>;
			require-prior-idle-ms = <125>;
			retro-tap;
			bindings = <&mo>, <&kp>;
		};
	};
};

/ {
	keymap {
		compatible = "zmk,keymap";
		layer_0 {
			bindings = <
				&sys_off
				&kp ESCAPE       &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3   &kp NUMBER_4       &kp NUMBER_5 &kp F5           &kp F6            &kp NUMBER_6  &kp NUMBER_7      &kp NUMBER_8   &kp NUMBER_9  &kp NUMBER_0  &kp BACKSPACE
				&kp TAB          &kp Q        &kp W        &kp E          &kp R              &kp T        &kp HOME         &none             &kp Y         &kp U             &kp I          &kp O         &kp P         &kp BACKSLASH
				&kp LEFT_CONTROL &kp A        &mt LCTRL S  &mt LSHIFT D   &lt LAYER_LHFN F   &kp G                                           &kp H         &lt LAYER_RHFN J  &mt RSHIFT K   &mt RCTRL L   &kp SEMICOLON &kp RETURN
				&kp LEFT_SHIFT   &kp Z        &kp X        &kp C          &kp V              &kp B        &kp END          &kp DEL           &kp N         &kp M             &kp COMMA      &kp PERIOD    &kp SLASH     &kp RIGHT_SHIFT
				&kp LEFT_CONTROL &none        &none        &kp LEFT_ALT   &mo LAYER_LFN                                                                    &mo LAYER_RFN     &kp RIGHT_ALT  &none         &none         &none
				                                                                             &none        &kp LEFT_GUI     &to LAYER_GAMING  &none
				                                                          &kp SPACE          &kp TAB      &none            &none             &kp BACKSPACE &kp SPACE
				                                                                                          &kp LEFT_SHIFT   &kp RIGHT_SHIFT
			>;
		};
		layer_1 {
			bindings = <
				&sys_off
				&none    &kp F1 &kp F2 &kp F3        &kp F4 &kp F5 &kp F11 &kp F12 &kp F6 &kp F7               &kp F8                &kp F9         &kp F10      &none
				&none    &none  &none  &none         &none  &none  &none   &none   &none  &kp LEFT_BRACE       &kp RIGHT_BRACE       &none          &none        &none
				&kp CAPS &none  &none  &kp BACKSLASH &none  &none                  &none  &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp UNDERSCORE &none        &none
				&none    &none  &none  &none         &none  &none  &none   &none   &none  &kp LEFT_BRACKET     &kp RIGHT_BRACKET     &none          &kp QUESTION &none
				&none    &none  &none  &none         &none                                &none                &none                 &none          &none        &none
				                                         &none  &none   &none   &none
				                                  &none  &none  &none   &none   &none  &none
				                                                &none   &none
			>;
		};
		layer_2 {
			bindings = <
				&sys_off
				&none &kp F1          &kp F2      &kp F3   &kp F4       &kp F5    &kp F11 &kp F12 &kp F6 &kp F7     &kp F8           &kp F9            &kp F10 &none
				&none &none           &none       &none    &none        &none     &none   &none   &none  &none      &none            &none             &none   &none
				&none &kp AMPERSAND   &kp DOLLAR  &kp PLUS &kp MINUS    &kp CARET                 &none  &none      &kp SINGLE_QUOTE &kp DOUBLE_QUOTES &none   &none
				&none &kp EXCLAMATION &kp AT_SIGN &kp HASH &kp ASTERISK &kp SLASH &none   &none   &none  &none      &none            &none             &none   &none
				&none &none           &none       &none    &none                                         &none      &none            &none             &none   &none
				                                                        &none     &none   &none   &none
				                                           &kp EQUAL    &none     &none   &none   &none  &kp RETURN
				                                                                  &none   &none
			>;
		};
		layer_3 {
			bindings = <
				&sys_off
				&kp ESCAPE       &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3   &kp NUMBER_4    &kp NUMBER_5 &kp F5           &kp F6            &kp NUMBER_6  &kp NUMBER_7        &kp NUMBER_8 &kp NUMBER_9  &kp NUMBER_0  &kp BACKSPACE
				&kp TAB          &kp Q        &kp W        &kp E          &kp R           &kp T        &kp DEL            &none             &kp Y         &kp U               &kp I        &kp O         &kp P         &kp BACKSLASH
				&kp LEFT_CONTROL &kp A        &kp S        &kp D          &kp F           &kp G                                           &kp H         &kp J               &kp K        &kp L         &kp SEMICOLON &kp RETURN
				&kp LEFT_SHIFT   &kp Z        &kp X        &kp C          &kp V           &kp B        &kp END &kp DEL &kp N         &kp M               &kp COMMA    &kp PERIOD    &kp SLASH     &kp RIGHT_SHIFT
				&kp LEFT_CONTROL &none        &kp LEFT_ALT &kp LEFT_ARROW &kp RIGHT_ARROW                                                               &kp DOWN_ARROW      &kp UP_ARROW &kp RIGHT_ALT &none         &none
				                                                                          &none        &kp LEFT_GUI     &to LAYER_MAIN    &none
				                                                          &kp SPACE       &kp TAB      &none            &none             &kp BACKSPACE &kp SPACE
				                                                                                       &kp LEFT_SHIFT   &kp RIGHT_SHIFT
			>;
		};
		layer_4 {
			bindings = <
				&sys_off
				&none    &kp F1    &kp F2                 &kp F3         &kp F4                  &kp F5  &kp F11 &kp F12 &kp F6       &kp F7       &kp F8       &kp F9       &kp F10   &none
				&none    &none     &kp LC(LS(TAB))        &kp UP_ARROW   &kp LC(TAB)             &none   &none   &none   &none        &kp NUMBER_7 &kp NUMBER_8 &kp NUMBER_9 &none     &none
				&kp CAPS &kp HOME  &kp LEFT_ARROW         &kp DOWN_ARROW &kp RIGHT_ARROW         &kp END                 &kp PLUS     &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6 &kp MINUS &none
				&none    &none     &kp LS(LG(LEFT_ARROW)) &none          &kp LS(LG(RIGHT_ARROW)) &none   &none   &none   &kp ASTERISK &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp SLASH &none
				&none    &none     &none                  &none          &none                                                        &kp NUMBER_0 &kp PERIOD   &none        &none     &none
				                                                                              &none   &none   &none  &none
				                                                      &none                   &none   &none   &none  &none   &kp RETURN
				                                                                                      &none   &none
			>;
		};
		layer_5 {
			bindings = <
				&sys_off
				&none &kp F1          &kp F2      &kp F3   &kp F4       &kp F5    &kp F11 &kp F12 &kp F6 &kp F7     &kp F8           &kp F9            &kp F10 &none
				&none &none           &none       &none    &none        &none     &none   &none   &none  &none      &none            &none             &none   &none
				&none &kp AMPERSAND   &kp DOLLAR  &kp PLUS &kp MINUS    &kp CARET                 &none  &none      &kp SINGLE_QUOTE &kp DOUBLE_QUOTES &none   &none
				&none &kp EXCLAMATION &kp AT_SIGN &kp HASH &kp ASTERISK &kp SLASH &none   &none   &none  &none      &none            &none             &none   &none
				&none &none           &none       &none    &none                                         &none      &none            &none             &none   &none
				                                                        &none     &none   &none   &none
				                                           &kp EQUAL    &none     &none   &none   &none  &kp RETURN
				                                                                  &none   &none
			>;
		};
	};
};
